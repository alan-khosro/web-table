const html='\n<header>\n\t<p>\n\t\tSORT by <select id="sort-col"></select> column in <input type="checkbox" id="is-descending" checked> Descending order \n\t</p>\n\n\t<p>\n\t\tFILTER by <select id="filter-col"></select> column that includes <input type="search" id="filter-input" size=10> with <input type="checkbox" id="case-sensitive" checked> case sensitive\n\t</p>\n</header>\n<details>\n\t<summary>Settings</summary>\n\n\t<p>\n\t\tCHANGE color for accent <input type="color" id="accent"> or text <input type="color" id="color">\n\t</p>\n\n\t<p class="hidden">\n\t\tUPDATE source data type <select id="data-type"></select> from <input type="url" id="url" size=10> or <button>select file</button> with columns and renames <submit>\n\t</p>\n\n\n\n\t<p class="hidden">\n\t\tPagination <input type="checkbox" id="is-pagination"> with page size <input id="page-size" type="range" min="5" max="100" value="20"> go to page <input id="page-number" type="number" min="0" value="0">\n\t</p>\n\n</details>\n\n<div id="table"></div>\n',css='\n<style>\n\t:host{\n\t\t--color: 0, 0, 0;\n\t\t--accent: 150, 200, 255;\n\n\t\tdisplay: block;\t\n\t\toverflow: auto;\t\n\t\tfont-family: "sans-serif";\n\t\tline-height: 1.5;\n\t\tcolor: rgb(var(--color));\n\t}\n\t.hidden {\n\t\tdisplay: none;\n\t}\n\n\tdetails{\n\t\tmargin: 0.5rem auto;\n\t}\n\n\ttable { \n\t\tbackground-color: rgba(var(--accent), .1);\n\t\tborder-collapse: collapse; \n\t}\n\n\ttr { \n\t\tborder: 2px solid rgb(var(--accent)); \n\t}\n\n\tth, td {\n\t\tpadding: .5rem 1rem;\n\t}\n\n\tthead {\n\t\tbackground-color: rgba(var(--accent), 0.5);\n\t\ttext-transform: uppercase;\n\t}\n</style>\n';export class WebTable extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).innerHTML=html+css,this.extractElements();var{url:t,datatype:e,columns:s,renames:n,delim:a,accent:i,color:o}=this.extractAttributes();this.updateData({url:t,datatype:e,columns:s,renames:n,delim:a,accent:i,color:o})}settings(){this.datatypeEl}extractAttributes(){return Object.fromEntries(this.getAttributeNames().map(t=>[t,this.getAttribute(t)]))}shapeData(t,e,s){if(e=e||"records",s)if(this.colNames=s,"arrays"==e){const e=t.shift(),s=this.colNames.map(t=>e.indexOf(t));this.rows=t.map(t=>s.map(e=>t[e]))}else"headless"==e?this.rows=t.map(t=>this.colNames.map(e=>t[e])):"records"==e&&(this.rows=t.map(t=>this.colNames.map(e=>t[e])));else"arrays"==e?(this.colNames=t.shift(),this.rows=t):"headless"==e?(this.colNames=Object.keys(t[0]),this.rows=t):"records"==e&&(this.colNames=Object.keys(t[0]),this.rows=t.map(Object.values))}populate(t,{columns:e,datatype:s,renames:n}){this.shapeData(t,s,e),n&&(this.colNames=n),this.rows=this.rows.map(t=>t.map(t=>t&&isNaN(t)?t.replace(/^["' ]+|["' ]+$/g,""):+t)),this.colNames=this.colNames.map(t=>t.replace(/^["' ]+|["' ]+$/g,"")),this.populateHeaderColNames(),this.addEventListeners(),this.table.innerHTML=this.createTable(this.colNames,this.rows)}extractElements(){this.sortCol=this.shadowRoot.querySelector("#sort-col"),this.isDescending=this.shadowRoot.querySelector("#is-descending"),this.filterCol=this.shadowRoot.querySelector("#filter-col"),this.filterInput=this.shadowRoot.querySelector("#filter-input"),this.caseSensitive=this.shadowRoot.querySelector("#case-sensitive"),this.table=this.shadowRoot.querySelector("#table"),this.accent=this.shadowRoot.querySelector("#accent"),this.color=this.shadowRoot.querySelector("#color"),this.style=this.shadowRoot.host.style,this.datatypeEl=this.shadowRoot.querySelector("#data-type")}addEventListeners(){this.sortCol.addEventListener("change",()=>this.sortTable()),this.isDescending.addEventListener("change",()=>this.sortTable()),this.filterInput.addEventListener("input",()=>this.filterTable()),this.caseSensitive.addEventListener("change",()=>this.filterTable()),this.filterCol.addEventListener("change",()=>this.filterTable()),this.accent.addEventListener("change",t=>this.changeColor("--accent",t.target.value)),this.color.addEventListener("change",t=>this.changeColor("--color",t.target.value))}async updateData({url:t,datatype:e,columns:s,renames:n,delim:a,accent:i,color:o}){i&&this.shadowRoot.host.style.setProperty("--accent",i),o&&this.shadowRoot.host.style.setProperty("--color",o),a=a||",",n=n&&n.split(","),s=s&&s.split(","),t&&"csv"==e?fetch(t).then(t=>t.text()).then(t=>t.split(/[\n\r]+/).map(t=>t.split(a))).then(t=>{const e=t.at(-1);1!=e.length||e[0]||t.pop(),this.populate(t,{datatype:"arrays",columns:s,renames:n})}):t&&fetch(t).then(t=>t.json()).then(t=>this.populate(t,{datatype:e,columns:s,renames:n}))}hexToRgb(t){const e=parseInt(t,16);return(e>>16&255)+","+(e>>8&255)+","+(255&e)}changeColor(t,e){this.style.setProperty(t,this.hexToRgb(e.slice(1)))}sortTable(){const t=this.sortCol.value,e=this.isDescending.checked?1:-1;this.rows.sort((s,n)=>s[t]<n[t]?e:-e),this.table.innerHTML=this.createTable(this.colNames,this.rows)}filterTable(){const t=this.caseSensitive.checked,e=this.filterCol.value,s=t?this.filterInput.value:this.filterInput.value.toLowerCase();if(t)var n=this.rows.filter(t=>(t[e]+"").includes(s));else n=this.rows.filter(t=>(t[e]+"").toLowerCase().includes(s));this.table.innerHTML=this.createTable(this.colNames,n)}populateHeaderColNames(){this.colNames.forEach((t,e)=>{this.sortCol.add(new Option(t,e)),this.filterCol.add(new Option(t,e))})}createTable(t,e){return`\n\t\t\t<table>\n\t\t\t\t<thead>${n(t,"th")}</thead>\n\t\t\t\t<tbody>${e.map(function(t){return`<tr> ${s(t[0],"th")} ${n(t.slice(1))} </tr>`}).join("")}</tbody>\n\t\t\t</table>\n\t\t`;function s(t,e="td"){return`<${e}>${t.toLocaleString()}</${e}>`}function n(t,e="td"){return t.map(t=>s(t,e)).join("")}}}window.customElements.define("web-table",WebTable);